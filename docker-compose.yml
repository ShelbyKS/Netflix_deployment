version: '3.9'

volumes:
  postgres_data:
  postgres_data_survay:
  redis_data:
  front_bundle:

networks:
  local_area:
    driver: bridge

services:
  postgres:
    image: postgres:15.3-alpine
    restart: always
    networks:
      local_area:
    volumes:
      - postgres_data:/var/lib/postgresql/data 
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

  postgres_survey:
    image: postgres:15.3-alpine
    restart: always
    networks:
      local_area:
    volumes:
      - postgres_data_survay:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init_survey.sql
    environment:
      POSTGRES_USER: ${POSTGRES_CSAT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_CSAT_PASSWORD}
      POSTGRES_DB: ${POSTGRES_CSAT_DB}
    ports:
      - ${POSTGRES_CSAT_PORT}:${POSTGRES_CSAT_PORT}

  auth:
    build:
      context: ../backend
      dockerfile: cmd/auth_service/Dockerfile
    networks:
      local_area:
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      frontend:
        condition: service_completed_successfully
    ports:
      - ${AUTHMS_HTTP_SERVER_PORT}:${AUTHMS_HTTP_SERVER_PORT}

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    networks:
      local_area:
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      frontend:
        condition: service_completed_successfully
      auth:
        condition: service_started
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}



  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - front_bundle:/app/bundle

  redis:
    image: redis:6.2-alpine
    networks:
      local_area:
    restart: always
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/var/lib/redis/data 

  nginx:
    image: nginx:latest
    networks:
      local_area:
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - front_bundle:/app/bundle
    depends_on:
      - backend

  fill_db:
    build:
      context: ../fill_db
      dockerfile: Dockerfile
    networks:
      local_area:
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

    depends_on:
      postgres:
        condition: service_started



